//Largest product in a series
let num = "731671765313306249192251196744265747423553491949346983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450";
const a = 13;
let maxx = 0; 
let maxDigits = [];

for (digit of num) {
  if (num.indexOf(digit) === num.length - a) {
    console.log(digit)
    break;
  }
  let multiple = 1;
  for (let i = 0; i < a; i++) {
    multiple *= Number(num[num.indexOf(digit) + i]);
  }
  if (multiple > maxx) {
    maxDigits = [];
    for (let i = 0; i < a; i++) {
      maxDigits.push(Number(num[num.indexOf(digit) + i]));
    }
    maxx = multiple;
  }
}
console.log(maxDigits, maxx);
//ეს ვერ გავასწორე 

//2
let fibonacci = [1, 2];
let nextElement = 0;
let sum = 2;

while (true) {
  let last = fibonacci[fibonacci.length-1];
  let lastL = fibonacci[fibonacci.length-2];
  nextElement = last + lastL;
  if (nextElement > 4000000) {
    break;
  }
  if (nextElement % 2 === 0) {
    sum += nextElement;
  }
  fibonacci.push(nextElement);
} 

console.log(sum);

//2 - recursion 

function fibonacci(first = 1 , second = 1 , max = 4000000 , sum =2){
  let tmp = first;
  first = second ; 
  second = first + tmp ; 
  if (second % 2 === 0){
    sum += second;
  }
  if (second > max){
    return sum;
  }
  return fibonacci(first, second , max ,sum );
}

console.log(fibonacci(1,1,4000000));